name: Full publish pipeline

on: [push]

jobs:



  build:

    strategy:
      matrix:
        include:
          - node-version: 20.x   # fastest, so run first, to error fast
            os: ubuntu-latest
          - node-version: 21.x   # check newest non-lts too
            os: ubuntu-latest
          - node-version: 21.x   # check newest non-lts too
            os: macos-latest
          - node-version: 21.x   # check newest non-lts too
            os: windows-latest
          - node-version: 18.x
            os: ubuntu-latest
          - node-version: 19.x
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm install && npm run build
      env:
        CI: true



  verify-version-bump:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 20.x
      uses: actions/setup-node@v1
      with:
        node-version: 20.x

    - name: Verify the version was bumped
      run: |
        npm install
        git config --global user.email "stonecypher@users.noreply.github.com"
        git config --global user.name "John Haugeland through Github Actions"
        node ./src/build_js/verify_version_bump.js



  release:

    needs: [build, verify-version-bump]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Export tag to envvars
      run: |
        export TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
        echo "TAG=$TAG" >> $GITHUB_ENV
        echo $TAG

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x
        registry-url: https://registry.npmjs.org/

    - name: Push tags
      run: git push origin --tags

    - name: Create the release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.TAG }}
        body_path: CHANGELOG.md

    - name: Publish to npm
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.SERVEHERE_NPM_PUBLISH_TOKEN }}



  # bump-jssm-viz:

  #   needs: [release]

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Export tag to envvars
  #     run: |
  #       export TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
  #       echo "TAG=$TAG" >> $GITHUB_ENV

  #   - name: CURL RPC to jssm-viz action
  #     run: |
  #       curl -X POST "https://api.github.com/repos/StoneCypher/jssm-viz/dispatches" -H 'Accept: application/vnd.github.everest-preview+json' -u ${{ secrets.JSSM_UPGRADE_PERSONAL_ACCESS_TOKEN }} --data '{"event_type": "upgrade_jssm", "client_payload": { "lib_version": "${{ env.TAG }}" }}'
